{"version":3,"file":"src_sandboxers_HTML_adaptors_useMutationObservers_ts.js","sources":["webpack://aero-sandbox/./src/sandboxers/HTML/adaptors/useMutationObservers.ts","webpack://aero-sandbox/./src/sandboxers/HTML/shared/rewriteElement.ts"],"sourcesContent":["import rewriteElement from \"$sandbox/HTML/shared/rewriteElement\";\n\nnew MutationObserver(mutations => {\n\tfor (const mutation of mutations)\n\t\tif (mutation.type === \"childList\")\n\t\t\tfor (const node of mutation.addedNodes)\n\t\t\t\tif (node instanceof HTMLElement) rewriteElement(node);\n\t\t\t\telse\n\t\t\t\t\tfor (const attr of mutation.attributeName)\n\t\t\t\t\t\tif (mutation.target instanceof HTMLElement)\n\t\t\t\t\t\t\trewriteElement(mutation.target, attr);\n}).observe(document, {\n\tchildList: true,\n\tsubtree: true\n});\n","import htmlRules from \"./htmlRules\";\n\nimport rewriteSrc from \"$shared/src\";\nimport rewriteHtmlSrc from \"./htmlSrc\";\n\nconst afterRewrote = new WeakMap<Element, boolean>();\nconst elContainer = new WeakMap<Element, Element>();\n\nfunction set(el: Element, attr: string, val = \"\", backup = true): void {\n\t// Avoid rewriting the next time by marking it to not be rewrote\n\tif (afterRewrote.has(el)) {\n\t\tconst isAfterRewrote = afterRewrote.get(el);\n\t\tif (isAfterRewrote === true) {\n\t\t\tafterRewrote.set(el, false);\n\t\t\treturn;\n\t\t}\n\t}\n\tafterRewrote.set(el, true);\n\n\tconst elBak = el.cloneNode(true);\n\tif (elBak instanceof Element) {\n\t\tel.setAttribute(attr, val);\n\n\t\t// Backup element (for Element hooks)\n\t\tif (backup) elContainer.set(el, elBak);\n\t}\n\n\tif ($aero.config.featureFlags.HTML_REWRITER_TYPE === \"mutation_observer\") {\n\t\tObject.defineProperty(el, attr, {\n\t\t\t// @ts-ignore\n\t\t\tget: Object.getOwnPropertyDescriptors(elBak).get,\n\t\t\t// @ts-ignore\n\t\t\tset: Object.getOwnPropertyDescriptors(el).set\n\t\t});\n\t}\n}\n\nexport default function rewriteElement(\n\tel: Element | Element,\n\tattrName?: string\n): Element {\n\t// Don't exclusively rewrite attributes or check for already observed elements\n\tconst isNew = typeof attrName === \"undefined\";\n\n\t// Check if the element's classes are any from the ignore classes\n\tconst elClassList = Array.from(el.classList);\n\tfor (const elClass of elClassList)\n\t\tfor (const ignoreClass of $aero.config.rewriters.html.ignoreClasses)\n\t\t\tif (elClass === ignoreClass) return el;\n\n\tif (isNew && \"integrity\" in el && el.integrity !== \"\") {\n\t\t// @ts-ignore\n\t\tconst cloner = new Cloner(el);\n\n\t\tcloner.clone();\n\t\tcloner.cleanup();\n\t}\n\n\t// @ts-ignore\n\tfor (const [elForRule, htmlRule] of htmlRules.entries())\n\t\tif (\n\t\t\tel instanceof elForRule && htmlRule.mustBeNew\n\t\t\t\t? isNew\n\t\t\t\t: true && attrName in htmlRule.onAttrHandlers\n\t\t) {\n\t\t\tconst attrHandler = htmlRule.onAttrHandlers[attrName];\n\t\t\tif (attrHandler instanceof Function)\n\t\t\t\tset(el, attrName, attrHandler[attrName](el, attrName));\n\t\t\telse if (attrHandler === \"rewrite-src\")\n\t\t\t\tset(el, attrName, rewriteSrc(attrName));\n\t\t\telse if (attrHandler === \"rewrite-html-src\")\n\t\t\t\tset(el, attrName, rewriteHtmlSrc(el.getAttribute(attrName)));\n\t\t}\n\n\t// @ts-ignore\n\tif (typeof el.onload === \"string\")\n\t\t// @ts-ignore\n\t\tset(el, \"onload\", $aero.rewriters.js(el.getAttribute(\"onload\")));\n\t// @ts-ignore\n\tif (typeof el.error === \"string\")\n\t\t// @ts-ignore\n\t\tset(el, \"onerror\", $aero.rewriters.js(el.getAttribute(\"onload\")));\n}\n"],"names":["rewriteElement","MutationObserver","mutations","_iteratorError","mutation","type","_iteratorError1","_iteratorError2","addedNodes","node","_instanceof","HTMLElement","attributeName","attr","target","observe","document","childList","subtree","htmlRules","rewriteSrc","rewriteHtmlSrc","afterRewrote","WeakMap","elContainer","set","el","val","backup","has","isAfterRewrote","get","elBak","cloneNode","Element","setAttribute","$aero","config","featureFlags","HTML_REWRITER_TYPE","Object","defineProperty","getOwnPropertyDescriptors","attrName","isNew","elClassList","Array","from","classList","elClass","rewriters","html","ignoreClasses","ignoreClass","integrity","cloner","Cloner","clone","cleanup","entries","elForRule","htmlRule","mustBeNew","onAttrHandlers","attrHandler","Function","getAttribute","onload","js","error"],"mappings":";;;;;;;;;;;;AAAiE;AAEjE,IAAIC,iBAAiBC,SAAAA;QACfC,kCAAAA,2BAAAA;;QAAL,QAAKA,YAAkBD,8BAAlBC,SAAAA,6BAAAA,QAAAA,yBAAAA;YAAAA,IAAMC,WAAND;YACJ,IAAIC,SAASC,IAAI,KAAK,aACrB;oBAGOC,mCAAAA,4BAAAA,6BAHFC,mCAAAA,4BAAAA;;oBAAL,QAAKA,aAAcH,SAASI,UAAU,qBAAjCD,UAAAA,8BAAAA,SAAAA,0BAAAA;wBAAAA,IAAME,OAANF;wBACJ,IAAQG,YAAJD,MAAgBE,cAAaX,+EAAcA,CAACS;;4BAE/C,QAAKH,aAAcF,SAASQ,aAAa,qBAApCN,UAAAA,8BAAAA,SAAAA,0BAAAA;gCAAAA,IAAMO,OAANP;gCACJ,IAAmBI,YAAfN,SAASU,MAAMJ,EAAYC,cAC9BX,+EAAcA,CAACI,SAASU,MAAM,EAAED;;;4BAF7BP;4BAAAA;;;qCAAAA,8BAAAA;oCAAAA;;;oCAAAA;0CAAAA;;;;;;oBAHFC;oBAAAA;;;6BAAAA,8BAAAA;4BAAAA;;;4BAAAA;kCAAAA;;;;YAKoC;;;QAPtCJ;QAAAA;;;iBAAAA,6BAAAA;gBAAAA;;;gBAAAA;sBAAAA;;;;AAQN,GAAGY,OAAO,CAACC,UAAU;IACpBC,WAAW;IACXC,SAAS;AACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdoC;AAEC;AACE;AAEvC,IAAMI,eAAe,IAAIC;AACzB,IAAMC,cAAc,IAAID;AAExB,SAASE,IAAIC,EAAW,EAAEb,IAAY;QAAEc,MAAAA,iEAAM,IAAIC,SAAAA,iEAAS;IAC1D,gEAAgE;IAChE,IAAIN,aAAaO,GAAG,CAACH,KAAK;QACzB,IAAMI,iBAAiBR,aAAaS,GAAG,CAACL;QACxC,IAAII,mBAAmB,MAAM;YAC5BR,aAAaG,GAAG,CAACC,IAAI;YACrB;QACD;IACD;IACAJ,aAAaG,GAAG,CAACC,IAAI;IAErB,IAAMM,QAAQN,GAAGO,SAAS,CAAC;IAC3B,IAASvB,YAALsB,OAAiBE,UAAS;QAC7BR,GAAGS,YAAY,CAACtB,MAAMc;QAEtB,qCAAqC;QACrC,IAAIC,QAAQJ,YAAYC,GAAG,CAACC,IAAIM;IACjC;IAEA,IAAII,MAAMC,MAAM,CAACC,YAAY,CAACC,kBAAkB,KAAK,qBAAqB;QACzEC,OAAOC,cAAc,CAACf,IAAIb,MAAM;YAC/B,aAAa;YACbkB,KAAKS,OAAOE,yBAAyB,CAACV,OAAOD,GAAG;YAChD,aAAa;YACbN,KAAKe,OAAOE,yBAAyB,CAAChB,IAAID,GAAG;QAC9C;IACD;AACD;AAEe,SAASzB,eACvB0B,EAAqB,EACrBiB,QAAiB;IAEjB,8EAA8E;IAC9E,IAAMC,QAAQ,OAAOD,aAAa;IAElC,iEAAiE;IACjE,IAAME,cAAcC,MAAMC,IAAI,CAACrB,GAAGsB,SAAS;QAErC7C,kCAAAA,2BAAAA,4BADDG,mCAAAA,4BAAAA;;QAAL,QAAKA,YAAiBuC,gCAAjBvC,SAAAA,8BAAAA,QAAAA,yBAAAA;YAAAA,IAAM2C,UAAN3C;;gBACJ,QAAKH,aAAqBiC,MAAMC,MAAM,CAACa,SAAS,CAACC,IAAI,CAACC,aAAa,qBAA9DjD,UAAAA,6BAAAA,SAAAA,0BAAAA;oBAAAA,IAAMkD,cAANlD;oBACJ,IAAI8C,YAAYI,aAAa,OAAO3B;;;gBADhCvB;gBAAAA;;;yBAAAA,6BAAAA;wBAAAA;;;wBAAAA;8BAAAA;;;;;;QADDG;QAAAA;;;iBAAAA,8BAAAA;gBAAAA;;;gBAAAA;sBAAAA;;;;IAIL,IAAIsC,SAAS,eAAelB,MAAMA,GAAG4B,SAAS,KAAK,IAAI;QACtD,aAAa;QACb,IAAMC,SAAS,IAAIC,OAAO9B;QAE1B6B,OAAOE,KAAK;QACZF,OAAOG,OAAO;IACf;QAGKnD,mCAAAA,4BAAAA;;QADL,aAAa;QACb,QAAKA,aAA+BY,0DAAiB,uBAAhDZ,UAAAA,8BAAAA,SAAAA,0BAAAA;YAAAA,mCAAAA,kBAAOqD,4BAAWC;YACtB,IACGnD,YAAFgB,IAAckC,cAAaC,SAASC,SAAS,GAC1ClB,QACA,QAAQD,YAAYkB,SAASE,cAAc,EAC7C;gBACD,IAAMC,cAAcH,SAASE,cAAc,CAACpB,SAAS;gBACrD,IAAejC,YAAXsD,aAAuBC,WAC1BxC,IAAIC,IAAIiB,UAAUqB,WAAW,CAACrB,SAAS,CAACjB,IAAIiB;qBACxC,IAAIqB,gBAAgB,eACxBvC,IAAIC,IAAIiB,UAAUvB,uDAAUA,CAACuB;qBACzB,IAAIqB,gBAAgB,oBACxBvC,IAAIC,IAAIiB,UAAUtB,oDAAcA,CAACK,GAAGwC,YAAY,CAACvB;YACnD;;;QAbIpC;QAAAA;;;iBAAAA,8BAAAA;gBAAAA;;;gBAAAA;sBAAAA;;;;IAeL,aAAa;IACb,IAAI,OAAOmB,GAAGyC,MAAM,KAAK,UACxB,aAAa;IACb1C,IAAIC,IAAI,UAAUU,MAAMc,SAAS,CAACkB,EAAE,CAAC1C,GAAGwC,YAAY,CAAC;IACtD,aAAa;IACb,IAAI,OAAOxC,GAAG2C,KAAK,KAAK,UACvB,aAAa;IACb5C,IAAIC,IAAI,WAAWU,MAAMc,SAAS,CAACkB,EAAE,CAAC1C,GAAGwC,YAAY,CAAC;AACxD"}